// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at

//   http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.apache.airavata.datacatalog.api";

message UserInfo {
    /*
     * This is an external identifier for the user, which identifies the user in
     * whatever user management scheme data catalog is integrated with.
     */
    string user_id = 1;
    /*
     * This is an (optional) external identifier for the tenant, which
     * identifies the tenant in whatever tenant management scheme data catalog
     * is integrated with.
     */
    optional string tenant_id = 2;
}

message GroupInfo {
    /*
     * This is an external identifier for the group, which identifies the group in
     * whatever group management scheme data catalog is integrated with.
     */
    string group_id = 1;
    /*
     * This is an (optional) external identifier for the tenant, which
     * identifies the tenant in whatever tenant management scheme data catalog
     * is integrated with.
     */
    optional string tenant_id = 2;
}

enum Permission {
    OWNER = 0;
    READ = 1;
    READ_METADATA = 2;
    WRITE = 3;
    WRITE_METADATA = 4;
    MANAGE_SHARING = 5;
}

message DataProduct {
    string data_product_id = 1;
    optional string parent_data_product_id = 2;
    string name = 3;
    optional string metadata = 4;
}

message DataProductCreateRequest {
    DataProduct data_product = 1;
}
message DataProductCreateResponse {
    DataProduct data_product = 1;
}
message DataProductUpdateRequest {
    DataProduct data_product = 1;
}
message DataProductUpdateResponse {
    DataProduct data_product = 1;
}
message DataProductGetRequest {
    string data_product_id = 1;
}
message DataProductGetResponse {
    DataProduct data_product = 1;
}
message DataProductDeleteRequest {
    string data_product_id = 1;
}
message DataProductDeleteResponse {
}

service DataCatalogAPIService {
    rpc createDataProduct(DataProductCreateRequest) returns (DataProductCreateResponse){}
    rpc updateDataProduct(DataProductUpdateRequest) returns (DataProductUpdateResponse){}
    rpc getDataProduct(DataProductGetRequest) returns (DataProductGetResponse){}
    rpc deleteDataProduct(DataProductDeleteRequest) returns (DataProductDeleteResponse){}
}
